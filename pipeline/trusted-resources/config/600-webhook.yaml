# Copyright 2022 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  # Note: the Deployment name must be the same as the Service name specified in
  # Service. If you change this name, you must also
  # change the value of WEBHOOK_SERVICE_NAME below.
  name: tekton-trusted-resources-webhook
  namespace: tekton-trusted-resources
  labels:
    app.kubernetes.io/name: tekton-trusted-resources
    app.kubernetes.io/component: tekton-trusted-resources
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "devel"
    app.kubernetes.io/part-of: admissioncontrol
    pipeline.tekton.dev/release: "devel"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-trusted-resources
      app.kubernetes.io/component: tekton-trusted-resources
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: admissioncontrol
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-trusted-resources
        app.kubernetes.io/component: tekton-trusted-resources
        app.kubernetes.io/instance: default
        app.kubernetes.io/version: "devel"
        app.kubernetes.io/part-of: admissioncontrol
        pipeline.tekton.dev/release: "devel"
        # labels below are related to istio and should not be used for resource lookup
        app: tekton-trusted-resources-webhook
    spec:
      serviceAccountName: tekton-trusted-resources-webhook
      containers:
      - name: webhook
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: ko://github.com/tektoncd/experimental/pipelines/trusted-resources/cmd/webhook_trusted_resource
        volumeMounts:
        - name: signing-secrets
          mountPath: /etc/signing-secrets
          readOnly: true
        # Resource request required for autoscaler to take any action for a metric
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 500Mi
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_SERVICEACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        # If you are changing these names, you will also need to update
        # the webhook's Role in 200-role.yaml to include the new
        # values in the "configmaps" "get" rule.
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-trusted-resources-webhook
        - name: WEBHOOK_SECRET_NAME
          value: trusted-resources-webhook-certs
        - name: METRICS_DOMAIN
          value: experimental.tekton.dev/trusttask
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          # User 65532 is the distroless nonroot user ID
          runAsUser: 65532
          runAsGroup: 65532
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: https-webhook
          containerPort: 8443
        - name: probes
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: signing-secrets
        secret:
          secretName: signing-secrets
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: tekton-trusted-resources
    app.kubernetes.io/component: tekton-trusted-resources
    app.kubernetes.io/instance: default
    app.kubernetes.io/version: "devel"
    app.kubernetes.io/part-of: admissioncontrol
    pipeline.tekton.dev/release: "devel"
    # labels below are related to istio and should not be used for resource lookup
    app: tekton-trusted-resources-webhook
  name: tekton-trusted-resources-webhook
  namespace: tekton-trusted-resources
spec:
  ports:
  # Define metrics and profiling for them to be accessible within service meshes.
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 442
    targetPort: 8443
  - name: probes
    port: 8080
  selector:
    app.kubernetes.io/name: tekton-trusted-resources
    app.kubernetes.io/component: tekton-trusted-resources
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: admissioncontrol
